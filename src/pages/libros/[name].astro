---
import qs from "qs";

import BookPageLayout from "@/layouts/BookPageLayout.astro";
import AboutSection from "@/components/AboutSection.astro";
import type { About } from "@/interfaces/AboutSection";
import type { GetStaticPaths } from "astro";
import PrimaryButton from "@/components/shared/PrimaryButton.astro";

import books from '@/assets/data/books.json'; 
import simpleReviews from '@/assets/data/simpleReviews.json'; 

import ReviewSimpleCard from "@/components/ui/ReviewSimpleCard.astro";
import type { ReviewCard } from "@/interfaces/ReviewCard";
import type { BookData, BookLinks } from "@/interfaces/BookData";
import type { BookReview } from "@/interfaces/BookReview";
import { getBooks } from "../api/books";



export async function getStaticPaths() {
    /* const baseUrl = import.meta.env.STRAPI_URL + "/api/books";

    const query = qs.stringify({
    populate: {
      image: {
        fields: ["name", "width", "height", "url"],
      },
      reviews:{
        populate: {
          fields: ["author", "wrote_at", "content", "visibility"]
        }
      }
    },
  }, { encode: false });

  const url = `${baseUrl}?${query}`; //
  //console.log("To fetch",url)
  const data = await fetch(url)
    .then((response) => response.json())
    .catch((error) => {
      console.error("Error fetching posts:", error);
      return null;
    }); */

    //console.log("Books data",data)

    const {body:books} = await getBooks()

    console.log("Books",books)

    return books.map((book:BookData) => ({
      params: { name: book.slug },
      props: { book },
  })) || [];

    /* const booksContent =  books.map((book) => {
        let bookPath = book.title.toLocaleLowerCase().replace(/\s+/g, '-')
        return {bookPath, ...book}
    })

    const staticPaths = booksContent.map((book) => (
        { params: {name: book.bookPath}, props: {...book} }
    ))
    //console.log(staticPaths)
    return staticPaths */

} //satisfies GetStaticPaths;

const {name} = Astro.params;
const {book} = Astro.props;
const {title, subtitle, description, image, links, reviews} = book as BookData;
const booksData = {title, subtitle, paragraph:description, image}

console.log(Astro.props)
---

<BookPageLayout {title}>   
    <!-- Book main info -->
    <AboutSection {...booksData} direction="flex-row-reverse">
        <div class="flex flex-row items-center justify-left">
            {links?.map((link:BookLinks) => (
                <div class="mr-4">
                    <PrimaryButton {...link}/>
                </div>
            ))}
        </div>
    </AboutSection>

    <!-- Book simple reviews -->
    <div class="flex flex-col w-[80%] mx-auto my-8">
        <h4>Lo que mis</h4>
        <h2 class="h2-connect leading-[3rem]">Lectores dicen</h2>
        <div class="flex-flex-col w-full my-6">
          {console.log("Reviews entrantes",reviews)}
            {reviews?.map((review: BookReview) => (
                <ReviewSimpleCard {...review}/>
            ))}
        </div>
    </div>
    
</BookPageLayout>